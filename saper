using System;

using System.Collections.Generic;

using System.Linq;

using System.Threading;



class Program

{

    static void Main()

    {

        Console.WindowHeight = 16;

        Console.WindowWidth = 32;

        int screenwidth = Console.WindowWidth;

        int screenheight = Console.WindowHeight;

        Random randomnummer = new Random();

        Pixel head = new Pixel();

        head.xPos = screenwidth / 2;

        head.yPos = screenheight / 2;

        head.direction = "RIGHT";

        head.schermKleur = ConsoleColor.Red;

        List<Pixel> tailParts = new List<Pixel>();

        int score = 0;

        head.xPos = screenwidth / 2;

        head.yPos = screenheight / 2;

        head.schermKleur = ConsoleColor.Red;

        string scoreString = "Score: " + score + " ";



        List<int> tailPositions = new List<int>();



        tailPositions.Add(head.xPos);

        tailPositions.Add(head.yPos);



        DateTime tijd = DateTime.Now;

        string obstacle = "*";

        int obstacleXpos = randomnummer.Next(1, screenwidth);

        int obstacleYpos = randomnummer.Next(1, screenheight);

        while (true)

        {

            Console.Clear();

            //Draw Obstacle

            Console.ForegroundColor = ConsoleColor.Cyan;

            Console.SetCursorPosition(obstacleXpos, obstacleYpos);

            Console.Write(obstacle);



            Console.ForegroundColor = ConsoleColor.Green;

            Console.SetCursorPosition(head.xPos, head.yPos);

            Console.Write("■");



            Console.ForegroundColor = ConsoleColor.White;

            for (int i = 0; i < screenwidth; i++)
            {
                Console.SetCursorPosition(i, 0);
                Console.ForegroundColor = ConsoleColor.White;
                Console.Write("■");

            }

            for (int i = 0; i < screenwidth; i++)

            {

                Console.SetCursorPosition(i, screenheight - 1);

                Console.Write("■");

            }

            for (int i = 0; i < screenheight; i++)

            {

                Console.SetCursorPosition(0, i);

                Console.Write("■");

            }

            for (int i = 0; i < screenheight; i++)

            {

                Console.SetCursorPosition(screenwidth - 1, i);

                Console.Write("■");

            }

            for (int i = 0; i < scoreString.Length; i++)
            {
                Console.SetCursorPosition(i, 0);
                Console.ForegroundColor = ConsoleColor.Red;
                Console.Write(scoreString[i]);
            }

            //Draw Snake

            foreach (Pixel tailPart in tailParts)
            {
                Console.SetCursorPosition(tailPart.xPos, tailPart.yPos);

                Console.ForegroundColor = ConsoleColor.White;
                if (tailPart.xPos == obstacleXpos && tailPart.yPos == obstacleYpos) Console.ForegroundColor = ConsoleColor.Cyan;
                Console.Write("■");
            }

            ConsoleKeyInfo info = Console.ReadKey();

            //Game Logic

            switch (info.Key)

            {

                case ConsoleKey.UpArrow:

                    head.direction = "UP";

                    break;

                case ConsoleKey.DownArrow:

                    head.direction = "DOWN";

                    break;

                case ConsoleKey.LeftArrow:

                    head.direction = "LEFT";

                    break;

                case ConsoleKey.RightArrow:

                    head.direction = "RIGHT";

                    break;

            }

            Pixel newPart = new Pixel();

            newPart.xPos = head.xPos;
            newPart.yPos = head.yPos;

            tailParts.Insert(0, newPart);

            if (head.direction == "UP")

                head.yPos--;

            if (head.direction == "DOWN")

                head.yPos++;

            if (head.direction == "LEFT")

                head.xPos--;

            if (head.direction == "RIGHT")

                head.xPos++;

            //Hindernis treffen

            if (head.xPos == obstacleXpos && head.yPos == obstacleYpos)

            {

                score++;

                obstacleXpos = randomnummer.Next(1, screenwidth - 1);

                obstacleYpos = randomnummer.Next(1, screenheight - 1);

                scoreString = "Score: " + score + " ";

            }

            if(score < tailParts.Count)
            {
                tailParts.RemoveAt(tailParts.Count - 1);
            }

            tailPositions.Insert(0, head.xPos);

            tailPositions.Insert(1, head.yPos);

            tailPositions.RemoveAt(tailPositions.Count - 1);

            tailPositions.RemoveAt(tailPositions.Count - 1);

            //Kollision mit Wände oder mit sich selbst

            if (head.xPos == 0 || head.xPos == screenwidth - 1 || head.yPos == 0 || head.yPos == screenheight - 1)

            {

                while (true)
                {

                    Console.Clear();

                    Console.ForegroundColor = ConsoleColor.Red;

                    Console.SetCursorPosition(screenwidth / 5, screenheight / 2);

                    Console.WriteLine("Game Over");

                    Console.SetCursorPosition(screenwidth / 5, screenheight / 2 + 1);

                    Console.WriteLine("Your score is: " + score);

                    Console.SetCursorPosition(screenwidth / 5, screenheight / 2 + 2);

                    Console.WriteLine("Press ENTER to leave");

                    ConsoleKeyInfo pressedKey = Console.ReadKey();

                    if (pressedKey.Key == ConsoleKey.Enter)
                    {
                        Environment.Exit(0);
                    }

                }

            }

            foreach(Pixel tailPart in tailParts)
            {

                if (head.xPos == tailPart.xPos && head.yPos == tailPart.yPos)

                {

                    while(true)
                    {

                        Console.Clear();

                        Console.ForegroundColor = ConsoleColor.Red;

                        Console.SetCursorPosition(screenwidth / 5, screenheight / 2);

                        Console.WriteLine("Game Over");

                        Console.SetCursorPosition(screenwidth / 5, screenheight / 2 + 1);

                        Console.WriteLine("Your score is: " + score);

                        Console.SetCursorPosition(screenwidth / 5, screenheight / 2 + 2);

                        Console.WriteLine("Press ENTER to leave");

                        ConsoleKeyInfo pressedKey = Console.ReadKey();

                        if(pressedKey.Key == ConsoleKey.Enter)
                        {
                            Environment.Exit(0);
                        }

                    }

                }

            }

            //Thread.Sleep(50);

        }

    }

}



public class Pixel
{

    public int xPos { get; set; }

    public int yPos { get; set; }

    public string direction { get; set; }

    public ConsoleColor schermKleur { get; set; }

    public string karacter { get; set; }

}



public class Obstakel

{

    public int Xpos { get; set; }
    public int Ypos { get; set; }

    // ?

    public ConsoleColor schermKleur { get; set; }

    public string karacter { get; set; }

}
